name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    container: debian:bookworm

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        apt-get update -y
        apt-get install -y --no-install-recommends \
          cmake \
          clang-tidy \
          nginx \
          libwebsockets-dev \
          libfftw3-dev \
          libasound2-dev \
          build-essential

    - name: Build
      run: |
        chmod +x compile.sh
        ./compile.sh 2>&1 | tee output.log
        BUILD_STATUS=$? # Capture the exit code
        cat output.log # Print the log for debugging
        if [ $BUILD_STATUS -ne 0 ]; then
          echo "::error::Build failed with exit code $BUILD_STATUS"
          exit 1
        else
          echo "Build completed successfully."
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: build/

    - name: Upload build log
      uses: actions/upload-artifact@v4
      with:
        name: build-log
        path: output.log

  lint:
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: true

    steps:
    - name: Download build log
      uses: actions/download-artifact@v4
      with:
        name: build-log
        path: .

    - name: Check for warnings in the build log
      run: |
        cat output.log
        ! grep -q "warning:" output.log

  test:
    runs-on: ubuntu-latest
    container: debian:bookworm
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install test dependencies
      run: |
        apt-get update -y
        apt-get install -y --no-install-recommends \
          cmake \
          clang-tidy \
          nginx \
          libwebsockets-dev \
          libfftw3-dev \
          libasound2-dev \
          build-essential

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build
        path: build/

    - name: List build directory contents
      run: |
        ls -lR build/ # Add this to see the file structure
        ls -la .

    - name: Run tests
      run: |
        chmod +x build/tests/*
        ./runtests.sh